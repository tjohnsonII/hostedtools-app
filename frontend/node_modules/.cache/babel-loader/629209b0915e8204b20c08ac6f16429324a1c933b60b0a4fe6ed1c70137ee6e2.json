{"ast":null,"code":"var _jsxFileName = \"/home/tim2/hostedtools-app/frontend/src/pages/FPBXImport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/navigationbar.css';\n// You need to install xlsx: npm install xlsx\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultColumns = ['Extension', 'Name', 'Email', 'Phone', 'Department'];\nconst FPBXImport = () => {\n  _s();\n  const [columns, setColumns] = useState(defaultColumns);\n  const [rows, setRows] = useState([{\n    Extension: '',\n    Name: '',\n    Email: '',\n    Phone: '',\n    Department: ''\n  }]);\n\n  // Handle file upload and parse\n  const handleFileUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      var _evt$target;\n      const data = new Uint8Array((_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const json = XLSX.utils.sheet_to_json(worksheet, {\n        defval: ''\n      });\n      if (json.length > 0) {\n        setColumns(Object.keys(json[0]));\n        setRows(json);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // Handle cell edit\n  const handleCellChange = (rowIdx, col, value) => {\n    const updatedRows = rows.map((row, idx) => idx === rowIdx ? {\n      ...row,\n      [col]: value\n    } : row);\n    setRows(updatedRows);\n  };\n\n  // Add/remove row\n  const addRow = () => setRows([...rows, Object.fromEntries(columns.map(c => [c, '']))]);\n  const removeRow = idx => setRows(rows.filter((_, i) => i !== idx));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fpbx-import\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"FPBX Import\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fpbx-file-upload\",\n      children: \"Upload .xlsm/.xlsx file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"fpbx-file-upload\",\n      type: \"file\",\n      accept: \".xls,.xlsx,.xlsm\",\n      onChange: handleFileUpload,\n      title: \"Upload FPBX import spreadsheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"fpbx-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row[col] || '',\n              onChange: e => handleCellChange(rowIdx, col, e.target.value),\n              placeholder: col,\n              title: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeRow(rowIdx),\n              disabled: rows.length === 1,\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, rowIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(FPBXImport, \"YR13b10PdJDNd6VxC01+d7gGfg8=\");\n_c = FPBXImport;\nexport default FPBXImport;\nvar _c;\n$RefreshReg$(_c, \"FPBXImport\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","defaultColumns","FPBXImport","_s","columns","setColumns","rows","setRows","Extension","Name","Email","Phone","Department","handleFileUpload","e","_e$target$files","file","target","files","reader","FileReader","onload","evt","_evt$target","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","defval","length","Object","keys","readAsArrayBuffer","handleCellChange","rowIdx","col","value","updatedRows","map","row","idx","addRow","fromEntries","c","removeRow","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","title","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/tim2/hostedtools-app/frontend/src/pages/FPBXImport.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/navigationbar.css';\n// You need to install xlsx: npm install xlsx\nimport * as XLSX from 'xlsx';\n\nconst defaultColumns = ['Extension', 'Name', 'Email', 'Phone', 'Department'];\n\nconst FPBXImport: React.FC = () => {\n  const [columns, setColumns] = useState<string[]>(defaultColumns);\n  const [rows, setRows] = useState<Array<Record<string, string>>>([\n    { Extension: '', Name: '', Email: '', Phone: '', Department: '' },\n  ]);\n\n  // Handle file upload and parse\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const data = new Uint8Array(evt.target?.result as ArrayBuffer);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const json = XLSX.utils.sheet_to_json<Record<string, string>>(worksheet, { defval: '' });\n      if (json.length > 0) {\n        setColumns(Object.keys(json[0]));\n        setRows(json);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // Handle cell edit\n  const handleCellChange = (rowIdx: number, col: string, value: string) => {\n    const updatedRows = rows.map((row, idx) =>\n      idx === rowIdx ? { ...row, [col]: value } : row\n    );\n    setRows(updatedRows);\n  };\n\n  // Add/remove row\n  const addRow = () => setRows([...rows, Object.fromEntries(columns.map(c => [c, '']))]);\n  const removeRow = (idx: number) => setRows(rows.filter((_, i) => i !== idx));\n\n  return (\n    <div className=\"fpbx-import\">\n      <h2>FPBX Import</h2>\n      <label htmlFor=\"fpbx-file-upload\">Upload .xlsm/.xlsx file:</label>\n      <input\n        id=\"fpbx-file-upload\"\n        type=\"file\"\n        accept=\".xls,.xlsx,.xlsm\"\n        onChange={handleFileUpload}\n        title=\"Upload FPBX import spreadsheet\"\n      />\n      <table className=\"fpbx-table\">\n        <thead>\n          <tr>\n            {columns.map(col => <th key={col}>{col}</th>)}\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, rowIdx) => (\n            <tr key={rowIdx}>\n              {columns.map(col => (\n                <td key={col}>\n                  <input\n                    type=\"text\"\n                    value={row[col] || ''}\n                    onChange={e => handleCellChange(rowIdx, col, e.target.value)}\n                    placeholder={col}\n                    title={col}\n                  />\n                </td>\n              ))}\n              <td>\n                <button onClick={() => removeRow(rowIdx)} disabled={rows.length === 1}>-</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={addRow}>Add Row</button>\n    </div>\n  );\n};\n\nexport default FPBXImport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
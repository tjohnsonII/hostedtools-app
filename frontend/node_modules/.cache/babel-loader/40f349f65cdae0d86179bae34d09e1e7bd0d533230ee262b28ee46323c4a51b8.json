{"ast":null,"code":"var _jsxFileName = \"/home/tim2/hostedtools-app/frontend/src/pages/MikrotikCodeGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/MikrotikCodeGenerator.css';\n\n// Example template with placeholders\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mikrotikTemplate = `/interface vlan\\nadd interface={{INTERFACE}} name=vlan{{VLAN_ID}} vlan-id={{VLAN_ID}}\\n/ip pool\\nadd name=Phones ranges={{DHCP_RANGE}}\\n/ip dhcp-server\\nadd address-pool=Phones interface=vlan{{VLAN_ID}} name=\"Phones DHCP\"\\n/ip address\\nadd address={{GATEWAY}} interface=vlan{{VLAN_ID}} network={{NETWORK}}\\n/ip dhcp-server network\\nadd address={{NETWORK}} dns-server={{DNS_SERVERS}} gateway={{GATEWAY}} netmask=24\\n`;\nfunction substituteTemplate(template, values) {\n  return template.replace(/{{(\\w+)}}/g, (_, key) => values[key] || '');\n}\nconst MikrotikCodeGenerator = () => {\n  _s();\n  const [form, setForm] = useState({\n    INTERFACE: '',\n    VLAN_ID: '',\n    DHCP_RANGE: '',\n    GATEWAY: '',\n    NETWORK: '',\n    DNS_SERVERS: ''\n  });\n  const [generated, setGenerated] = useState('');\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleGenerate = () => {\n    setGenerated(substituteTemplate(mikrotikTemplate, form));\n  };\n  const handleCopy = () => {\n    navigator.clipboard.writeText(generated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mikrotik-code-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mikrotik Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleGenerate();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"INTERFACE\",\n        placeholder: \"Interface (e.g. ether9)\",\n        title: \"Interface\",\n        value: form.INTERFACE,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"VLAN_ID\",\n        placeholder: \"VLAN ID (e.g. 202)\",\n        title: \"VLAN ID\",\n        value: form.VLAN_ID,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"DHCP_RANGE\",\n        placeholder: \"DHCP Range (e.g. 172.16.1.3-172.16.1.10)\",\n        title: \"DHCP Range\",\n        value: form.DHCP_RANGE,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"GATEWAY\",\n        placeholder: \"Gateway (e.g. 172.16.1.1/24)\",\n        title: \"Gateway\",\n        value: form.GATEWAY,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"NETWORK\",\n        placeholder: \"Network (e.g. 172.16.1.0)\",\n        title: \"Network\",\n        value: form.NETWORK,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"DNS_SERVERS\",\n        placeholder: \"DNS Servers (e.g. 1.1.1.1,8.8.8.8)\",\n        title: \"DNS Servers\",\n        value: form.DNS_SERVERS,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: generated,\n      readOnly: true,\n      rows: 10,\n      className: \"generated-code-textarea\",\n      placeholder: \"Generated Mikrotik code will appear here\",\n      title: \"Generated Mikrotik code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCopy,\n      disabled: !generated,\n      children: \"Copy to Clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MikrotikCodeGenerator, \"uz2hQH5hQD622Q/OqmZqugss6gg=\");\n_c = MikrotikCodeGenerator;\nexport default MikrotikCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MikrotikCodeGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mikrotikTemplate","substituteTemplate","template","values","replace","_","key","MikrotikCodeGenerator","_s","form","setForm","INTERFACE","VLAN_ID","DHCP_RANGE","GATEWAY","NETWORK","DNS_SERVERS","generated","setGenerated","handleChange","e","target","name","value","handleGenerate","handleCopy","navigator","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","placeholder","title","onChange","type","readOnly","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/tim2/hostedtools-app/frontend/src/pages/MikrotikCodeGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/MikrotikCodeGenerator.css';\n\n// Example template with placeholders\nconst mikrotikTemplate = `/interface vlan\\nadd interface={{INTERFACE}} name=vlan{{VLAN_ID}} vlan-id={{VLAN_ID}}\\n/ip pool\\nadd name=Phones ranges={{DHCP_RANGE}}\\n/ip dhcp-server\\nadd address-pool=Phones interface=vlan{{VLAN_ID}} name=\"Phones DHCP\"\\n/ip address\\nadd address={{GATEWAY}} interface=vlan{{VLAN_ID}} network={{NETWORK}}\\n/ip dhcp-server network\\nadd address={{NETWORK}} dns-server={{DNS_SERVERS}} gateway={{GATEWAY}} netmask=24\\n`;\n\nfunction substituteTemplate(template: string, values: Record<string, string>) {\n  return template.replace(/{{(\\w+)}}/g, (_, key) => values[key] || '');\n}\n\nconst MikrotikCodeGenerator: React.FC = () => {\n  const [form, setForm] = useState({\n    INTERFACE: '',\n    VLAN_ID: '',\n    DHCP_RANGE: '',\n    GATEWAY: '',\n    NETWORK: '',\n    DNS_SERVERS: '',\n  });\n  const [generated, setGenerated] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleGenerate = () => {\n    setGenerated(substituteTemplate(mikrotikTemplate, form));\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(generated);\n  };\n\n  return (\n    <div className=\"mikrotik-code-generator\">\n      <h2>Mikrotik Code Generator</h2>\n      <form onSubmit={e => { e.preventDefault(); handleGenerate(); }}>\n        <input name=\"INTERFACE\" placeholder=\"Interface (e.g. ether9)\" title=\"Interface\" value={form.INTERFACE} onChange={handleChange} />\n        <input name=\"VLAN_ID\" placeholder=\"VLAN ID (e.g. 202)\" title=\"VLAN ID\" value={form.VLAN_ID} onChange={handleChange} />\n        <input name=\"DHCP_RANGE\" placeholder=\"DHCP Range (e.g. 172.16.1.3-172.16.1.10)\" title=\"DHCP Range\" value={form.DHCP_RANGE} onChange={handleChange} />\n        <input name=\"GATEWAY\" placeholder=\"Gateway (e.g. 172.16.1.1/24)\" title=\"Gateway\" value={form.GATEWAY} onChange={handleChange} />\n        <input name=\"NETWORK\" placeholder=\"Network (e.g. 172.16.1.0)\" title=\"Network\" value={form.NETWORK} onChange={handleChange} />\n        <input name=\"DNS_SERVERS\" placeholder=\"DNS Servers (e.g. 1.1.1.1,8.8.8.8)\" title=\"DNS Servers\" value={form.DNS_SERVERS} onChange={handleChange} />\n        <button type=\"submit\">Generate Code</button>\n      </form>\n      <textarea value={generated} readOnly rows={10} className=\"generated-code-textarea\" placeholder=\"Generated Mikrotik code will appear here\" title=\"Generated Mikrotik code\" />\n      <button onClick={handleCopy} disabled={!generated}>Copy to Clipboard</button>\n    </div>\n  );\n};\n\nexport default MikrotikCodeGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AACjC,OAAO,kCAAkC;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,iaAAia;AAE1b,SAASC,kBAAkBA,CAACC,QAAgB,EAAEC,MAA8B,EAAE;EAC5E,OAAOD,QAAQ,CAACE,OAAO,CAAC,YAAY,EAAE,CAACC,CAAC,EAAEC,GAAG,KAAKH,MAAM,CAACG,GAAG,CAAC,IAAI,EAAE,CAAC;AACtE;AAEA,MAAMC,qBAA+B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAC/Bc,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMsB,YAAY,GAAIC,CAAsC,IAAK;IAC/DV,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACW,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BN,YAAY,CAACjB,kBAAkB,CAACD,gBAAgB,EAAES,IAAI,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvBC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACX,SAAS,CAAC;EAC1C,CAAC;EAED,oBACElB,OAAA;IAAK8B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC/B,OAAA;MAAA+B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnC,OAAA;MAAMoC,QAAQ,EAAEf,CAAC,IAAI;QAAEA,CAAC,CAACgB,cAAc,CAAC,CAAC;QAAEZ,cAAc,CAAC,CAAC;MAAE,CAAE;MAAAM,QAAA,gBAC7D/B,OAAA;QAAOuB,IAAI,EAAC,WAAW;QAACe,WAAW,EAAC,yBAAyB;QAACC,KAAK,EAAC,WAAW;QAACf,KAAK,EAAEd,IAAI,CAACE,SAAU;QAAC4B,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjInC,OAAA;QAAOuB,IAAI,EAAC,SAAS;QAACe,WAAW,EAAC,oBAAoB;QAACC,KAAK,EAAC,SAAS;QAACf,KAAK,EAAEd,IAAI,CAACG,OAAQ;QAAC2B,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtHnC,OAAA;QAAOuB,IAAI,EAAC,YAAY;QAACe,WAAW,EAAC,0CAA0C;QAACC,KAAK,EAAC,YAAY;QAACf,KAAK,EAAEd,IAAI,CAACI,UAAW;QAAC0B,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrJnC,OAAA;QAAOuB,IAAI,EAAC,SAAS;QAACe,WAAW,EAAC,8BAA8B;QAACC,KAAK,EAAC,SAAS;QAACf,KAAK,EAAEd,IAAI,CAACK,OAAQ;QAACyB,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChInC,OAAA;QAAOuB,IAAI,EAAC,SAAS;QAACe,WAAW,EAAC,2BAA2B;QAACC,KAAK,EAAC,SAAS;QAACf,KAAK,EAAEd,IAAI,CAACM,OAAQ;QAACwB,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7HnC,OAAA;QAAOuB,IAAI,EAAC,aAAa;QAACe,WAAW,EAAC,oCAAoC;QAACC,KAAK,EAAC,aAAa;QAACf,KAAK,EAAEd,IAAI,CAACO,WAAY;QAACuB,QAAQ,EAAEpB;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClJnC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACPnC,OAAA;MAAUwB,KAAK,EAAEN,SAAU;MAACwB,QAAQ;MAACC,IAAI,EAAE,EAAG;MAACb,SAAS,EAAC,yBAAyB;MAACQ,WAAW,EAAC,0CAA0C;MAACC,KAAK,EAAC;IAAyB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5KnC,OAAA;MAAQ4C,OAAO,EAAElB,UAAW;MAACmB,QAAQ,EAAE,CAAC3B,SAAU;MAAAa,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCID,qBAA+B;AAAAsC,EAAA,GAA/BtC,qBAA+B;AAyCrC,eAAeA,qBAAqB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
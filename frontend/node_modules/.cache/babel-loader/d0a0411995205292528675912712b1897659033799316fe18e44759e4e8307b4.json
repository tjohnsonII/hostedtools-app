{"ast":null,"code":"var _jsxFileName = \"/home/tim2/hostedtools-app/frontend/src/pages/FullConfig.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/FullConfig.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullConfig = () => {\n  _s();\n  // Simulated code aggregation for demo; replace with real data source as needed\n  const [selectedType, setSelectedType] = useState('yealink');\n  const yealinkCode = '# Yealink config example...';\n  const polycomCode = '# Polycom config example...';\n\n  // In a real app, code would be passed via props, context, or backend\n  const aggregatedCode = selectedType === 'yealink' ? yealinkCode : polycomCode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-config\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Full Config Aggregator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-type-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"configType\",\n          value: \"yealink\",\n          checked: selectedType === 'yealink',\n          onChange: () => setSelectedType('yealink')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \"Yealink\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"configType\",\n          value: \"polycom\",\n          checked: selectedType === 'polycom',\n          onChange: () => setSelectedType('polycom')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \"Polycom\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"full-config-textarea\",\n      value: aggregatedCode,\n      readOnly: true,\n      rows: 12,\n      title: \"Aggregated configuration code\",\n      placeholder: \"Aggregated configuration will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(FullConfig, \"Xt4baXsgfag54GFXPVSxbzhWtKQ=\");\n_c = FullConfig;\nexport default FullConfig;\nvar _c;\n$RefreshReg$(_c, \"FullConfig\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FullConfig","_s","selectedType","setSelectedType","yealinkCode","polycomCode","aggregatedCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","checked","onChange","readOnly","rows","title","placeholder","_c","$RefreshReg$"],"sources":["/home/tim2/hostedtools-app/frontend/src/pages/FullConfig.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/FullConfig.css';\n\nconst FullConfig: React.FC = () => {\n  // Simulated code aggregation for demo; replace with real data source as needed\n  const [selectedType, setSelectedType] = useState<'yealink' | 'polycom'>('yealink');\n  const yealinkCode = '# Yealink config example...';\n  const polycomCode = '# Polycom config example...';\n\n  // In a real app, code would be passed via props, context, or backend\n  const aggregatedCode = selectedType === 'yealink' ? yealinkCode : polycomCode;\n\n  return (\n    <div className=\"full-config\">\n      <h2>Full Config Aggregator</h2>\n      <div className=\"config-type-selector\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"configType\"\n            value=\"yealink\"\n            checked={selectedType === 'yealink'}\n            onChange={() => setSelectedType('yealink')}\n          />\n          Yealink\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"configType\"\n            value=\"polycom\"\n            checked={selectedType === 'polycom'}\n            onChange={() => setSelectedType('polycom')}\n          />\n          Polycom\n        </label>\n      </div>\n      <textarea\n        className=\"full-config-textarea\"\n        value={aggregatedCode}\n        readOnly\n        rows={12}\n        title=\"Aggregated configuration code\"\n        placeholder=\"Aggregated configuration will appear here.\"\n      />\n    </div>\n  );\n};\n\nexport default FullConfig;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AACjC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAwB,SAAS,CAAC;EAClF,MAAMO,WAAW,GAAG,6BAA6B;EACjD,MAAMC,WAAW,GAAG,6BAA6B;;EAEjD;EACA,MAAMC,cAAc,GAAGJ,YAAY,KAAK,SAAS,GAAGE,WAAW,GAAGC,WAAW;EAE7E,oBACEN,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BT,OAAA;MAAAS,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bb,OAAA;MAAKQ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCT,OAAA;QAAAS,QAAA,gBACET,OAAA;UACEc,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAC,SAAS;UACfC,OAAO,EAAEd,YAAY,KAAK,SAAU;UACpCe,QAAQ,EAAEA,CAAA,KAAMd,eAAe,CAAC,SAAS;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,WAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRb,OAAA;QAAAS,QAAA,gBACET,OAAA;UACEc,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAC,SAAS;UACfC,OAAO,EAAEd,YAAY,KAAK,SAAU;UACpCe,QAAQ,EAAEA,CAAA,KAAMd,eAAe,CAAC,SAAS;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,WAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNb,OAAA;MACEQ,SAAS,EAAC,sBAAsB;MAChCQ,KAAK,EAAET,cAAe;MACtBY,QAAQ;MACRC,IAAI,EAAE,EAAG;MACTC,KAAK,EAAC,+BAA+B;MACrCC,WAAW,EAAC;IAA4C;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CA5CID,UAAoB;AAAAsB,EAAA,GAApBtB,UAAoB;AA8C1B,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
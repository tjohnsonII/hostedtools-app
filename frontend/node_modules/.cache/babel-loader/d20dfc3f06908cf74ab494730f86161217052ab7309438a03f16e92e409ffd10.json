{"ast":null,"code":"import React,{useState}from'react';import'../css/navigationbar.css';import'../css/MikrotikCodeGenerator.css';// Example template with placeholders\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mikrotikTemplate=`/interface vlan\\nadd interface={{INTERFACE}} name=vlan{{VLAN_ID}} vlan-id={{VLAN_ID}}\\n/ip pool\\nadd name=Phones ranges={{DHCP_RANGE}}\\n/ip dhcp-server\\nadd address-pool=Phones interface=vlan{{VLAN_ID}} name=\"Phones DHCP\"\\n/ip address\\nadd address={{GATEWAY}} interface=vlan{{VLAN_ID}} network={{NETWORK}}\\n/ip dhcp-server network\\nadd address={{NETWORK}} dns-server={{DNS_SERVERS}} gateway={{GATEWAY}} netmask=24\\n`;function substituteTemplate(template,values){return template.replace(/{{(\\w+)}}/g,(_,key)=>values[key]||'');}const MikrotikCodeGenerator=()=>{const[form,setForm]=useState({INTERFACE:'',VLAN_ID:'',DHCP_RANGE:'',GATEWAY:'',NETWORK:'',DNS_SERVERS:''});const[generated,setGenerated]=useState('');const handleChange=e=>{setForm({...form,[e.target.name]:e.target.value});};const handleGenerate=()=>{setGenerated(substituteTemplate(mikrotikTemplate,form));};const handleCopy=()=>{navigator.clipboard.writeText(generated);};return/*#__PURE__*/_jsxs(\"div\",{className:\"mikrotik-code-generator\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Mikrotik Code Generator\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();handleGenerate();},children:[/*#__PURE__*/_jsx(\"input\",{name:\"INTERFACE\",placeholder:\"Interface (e.g. ether9)\",title:\"Interface\",value:form.INTERFACE,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{name:\"VLAN_ID\",placeholder:\"VLAN ID (e.g. 202)\",title:\"VLAN ID\",value:form.VLAN_ID,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{name:\"DHCP_RANGE\",placeholder:\"DHCP Range (e.g. 172.16.1.3-172.16.1.10)\",title:\"DHCP Range\",value:form.DHCP_RANGE,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{name:\"GATEWAY\",placeholder:\"Gateway (e.g. 172.16.1.1/24)\",title:\"Gateway\",value:form.GATEWAY,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{name:\"NETWORK\",placeholder:\"Network (e.g. 172.16.1.0)\",title:\"Network\",value:form.NETWORK,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{name:\"DNS_SERVERS\",placeholder:\"DNS Servers (e.g. 1.1.1.1,8.8.8.8)\",title:\"DNS Servers\",value:form.DNS_SERVERS,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Generate Code\"})]}),/*#__PURE__*/_jsx(\"textarea\",{value:generated,readOnly:true,rows:10,className:\"generated-code-textarea\",placeholder:\"Generated Mikrotik code will appear here\",title:\"Generated Mikrotik code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCopy,disabled:!generated,children:\"Copy to Clipboard\"})]});};export default MikrotikCodeGenerator;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","mikrotikTemplate","substituteTemplate","template","values","replace","_","key","MikrotikCodeGenerator","form","setForm","INTERFACE","VLAN_ID","DHCP_RANGE","GATEWAY","NETWORK","DNS_SERVERS","generated","setGenerated","handleChange","e","target","name","value","handleGenerate","handleCopy","navigator","clipboard","writeText","className","children","onSubmit","preventDefault","placeholder","title","onChange","type","readOnly","rows","onClick","disabled"],"sources":["/home/tim2/hostedtools-app/frontend/src/pages/MikrotikCodeGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/MikrotikCodeGenerator.css';\n\n// Example template with placeholders\nconst mikrotikTemplate = `/interface vlan\\nadd interface={{INTERFACE}} name=vlan{{VLAN_ID}} vlan-id={{VLAN_ID}}\\n/ip pool\\nadd name=Phones ranges={{DHCP_RANGE}}\\n/ip dhcp-server\\nadd address-pool=Phones interface=vlan{{VLAN_ID}} name=\"Phones DHCP\"\\n/ip address\\nadd address={{GATEWAY}} interface=vlan{{VLAN_ID}} network={{NETWORK}}\\n/ip dhcp-server network\\nadd address={{NETWORK}} dns-server={{DNS_SERVERS}} gateway={{GATEWAY}} netmask=24\\n`;\n\nfunction substituteTemplate(template: string, values: Record<string, string>) {\n  return template.replace(/{{(\\w+)}}/g, (_, key) => values[key] || '');\n}\n\nconst MikrotikCodeGenerator: React.FC = () => {\n  const [form, setForm] = useState({\n    INTERFACE: '',\n    VLAN_ID: '',\n    DHCP_RANGE: '',\n    GATEWAY: '',\n    NETWORK: '',\n    DNS_SERVERS: '',\n  });\n  const [generated, setGenerated] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleGenerate = () => {\n    setGenerated(substituteTemplate(mikrotikTemplate, form));\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(generated);\n  };\n\n  return (\n    <div className=\"mikrotik-code-generator\">\n      <h2>Mikrotik Code Generator</h2>\n      <form onSubmit={e => { e.preventDefault(); handleGenerate(); }}>\n        <input name=\"INTERFACE\" placeholder=\"Interface (e.g. ether9)\" title=\"Interface\" value={form.INTERFACE} onChange={handleChange} />\n        <input name=\"VLAN_ID\" placeholder=\"VLAN ID (e.g. 202)\" title=\"VLAN ID\" value={form.VLAN_ID} onChange={handleChange} />\n        <input name=\"DHCP_RANGE\" placeholder=\"DHCP Range (e.g. 172.16.1.3-172.16.1.10)\" title=\"DHCP Range\" value={form.DHCP_RANGE} onChange={handleChange} />\n        <input name=\"GATEWAY\" placeholder=\"Gateway (e.g. 172.16.1.1/24)\" title=\"Gateway\" value={form.GATEWAY} onChange={handleChange} />\n        <input name=\"NETWORK\" placeholder=\"Network (e.g. 172.16.1.0)\" title=\"Network\" value={form.NETWORK} onChange={handleChange} />\n        <input name=\"DNS_SERVERS\" placeholder=\"DNS Servers (e.g. 1.1.1.1,8.8.8.8)\" title=\"DNS Servers\" value={form.DNS_SERVERS} onChange={handleChange} />\n        <button type=\"submit\">Generate Code</button>\n      </form>\n      <textarea value={generated} readOnly rows={10} className=\"generated-code-textarea\" placeholder=\"Generated Mikrotik code will appear here\" title=\"Generated Mikrotik code\" />\n      <button onClick={handleCopy} disabled={!generated}>Copy to Clipboard</button>\n    </div>\n  );\n};\n\nexport default MikrotikCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState}from'react';import'../css/navigationbar.css';import'../css/FullConfig.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FullConfig=()=>{// Simulated code aggregation for demo; replace with real data source as needed\nconst[selectedType,setSelectedType]=useState('yealink');const yealinkCode='# Yealink config example...';const polycomCode='# Polycom config example...';// In a real app, code would be passed via props, context, or backend\nconst aggregatedCode=selectedType==='yealink'?yealinkCode:polycomCode;return/*#__PURE__*/_jsxs(\"div\",{className:\"full-config\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Full Config Aggregator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"config-type-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"configType\",value:\"yealink\",checked:selectedType==='yealink',onChange:()=>setSelectedType('yealink')}),\"Yealink\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"configType\",value:\"polycom\",checked:selectedType==='polycom',onChange:()=>setSelectedType('polycom')}),\"Polycom\"]})]}),/*#__PURE__*/_jsx(\"textarea\",{className:\"full-config-textarea\",value:aggregatedCode,readOnly:true,rows:12,title:\"Aggregated configuration code\",placeholder:\"Aggregated configuration will appear here.\"})]});};export default FullConfig;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","FullConfig","selectedType","setSelectedType","yealinkCode","polycomCode","aggregatedCode","className","children","type","name","value","checked","onChange","readOnly","rows","title","placeholder"],"sources":["/home/tim2/hostedtools-app/frontend/src/pages/FullConfig.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/navigationbar.css';\nimport '../css/FullConfig.css';\n\nconst FullConfig: React.FC = () => {\n  // Simulated code aggregation for demo; replace with real data source as needed\n  const [selectedType, setSelectedType] = useState<'yealink' | 'polycom'>('yealink');\n  const yealinkCode = '# Yealink config example...';\n  const polycomCode = '# Polycom config example...';\n\n  // In a real app, code would be passed via props, context, or backend\n  const aggregatedCode = selectedType === 'yealink' ? yealinkCode : polycomCode;\n\n  return (\n    <div className=\"full-config\">\n      <h2>Full Config Aggregator</h2>\n      <div className=\"config-type-selector\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"configType\"\n            value=\"yealink\"\n            checked={selectedType === 'yealink'}\n            onChange={() => setSelectedType('yealink')}\n          />\n          Yealink\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"configType\"\n            value=\"polycom\"\n            checked={selectedType === 'polycom'}\n            onChange={() => setSelectedType('polycom')}\n          />\n          Polycom\n        </label>\n      </div>\n      <textarea\n        className=\"full-config-textarea\"\n        value={aggregatedCode}\n        readOnly\n        rows={12}\n        title=\"Aggregated configuration code\"\n        placeholder=\"Aggregated configuration will appear here.\"\n      />\n    </div>\n  );\n};\n\nexport default FullConfig;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,0BAA0B,CACjC,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,UAAoB,CAAGA,CAAA,GAAM,CACjC;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGP,QAAQ,CAAwB,SAAS,CAAC,CAClF,KAAM,CAAAQ,WAAW,CAAG,6BAA6B,CACjD,KAAM,CAAAC,WAAW,CAAG,6BAA6B,CAEjD;AACA,KAAM,CAAAC,cAAc,CAAGJ,YAAY,GAAK,SAAS,CAAGE,WAAW,CAAGC,WAAW,CAE7E,mBACEL,KAAA,QAAKO,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BV,IAAA,OAAAU,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/BR,KAAA,QAAKO,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCR,KAAA,UAAAQ,QAAA,eACEV,IAAA,UACEW,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,YAAY,CACjBC,KAAK,CAAC,SAAS,CACfC,OAAO,CAAEV,YAAY,GAAK,SAAU,CACpCW,QAAQ,CAAEA,CAAA,GAAMV,eAAe,CAAC,SAAS,CAAE,CAC5C,CAAC,UAEJ,EAAO,CAAC,cACRH,KAAA,UAAAQ,QAAA,eACEV,IAAA,UACEW,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,YAAY,CACjBC,KAAK,CAAC,SAAS,CACfC,OAAO,CAAEV,YAAY,GAAK,SAAU,CACpCW,QAAQ,CAAEA,CAAA,GAAMV,eAAe,CAAC,SAAS,CAAE,CAC5C,CAAC,UAEJ,EAAO,CAAC,EACL,CAAC,cACNL,IAAA,aACES,SAAS,CAAC,sBAAsB,CAChCI,KAAK,CAAEL,cAAe,CACtBQ,QAAQ,MACRC,IAAI,CAAE,EAAG,CACTC,KAAK,CAAC,+BAA+B,CACrCC,WAAW,CAAC,4CAA4C,CACzD,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}